[{"source": "https://www.jefftk.com/news.rss", "title": "Implicitly Typed C", "description": "<p><span>\n\nI don't know any good reason to do this, but if you would rather be\nwriting Python or JavaScript here's something you can do with a C\ncompiler:\n\n</span>\n\n<p>\n\n</p>\n\n<pre>\n$ cat tmp.c\nfoo(x) {\n  return x+5;\n}\nbar() {\n  return 4;\n}\nmain() {\n  printf(\"%d\\n\", foo(bar()));\n}\n\n$ gcc -w -o tmp.out tmp.c &amp;&amp; ./tmp.out\n9\n</pre>\n\n\n\n<p>\n\nThis code takes advantage of a historical quirk of C where types are\nassumed to be <code>int</code> unless otherwise specified:\n<code>foo(x) {...}</code> is equivalent to <code>int foo(int x)\n{...}</code>. Additionally the <code>printf</code> works because gcc\nincludes <code>stdio.h</code> by default, and <code>main</code> is\nspecial-cased to assume a final <code>return 0</code>.\n\n</p>\n\n<p>\n\nI've occasionally used this style when writing <a href=\"https://www.jefftk.com/p/a-function-that-returns-twice-fork\">example code</a> to\nremove visual noise, but it's probably not a good idea there either.\n\n  </p>\n\n<p><i>Comment via: <a href=\"https://www.f", "link": "https://www.jefftk.com/p/implicitly-typed-c", "date_published": "2023-12-11T08:00:00+00:00", "permanent": false, "bookmarked": false, "dead": false, "artist": "Jeff Kaufmann", "album": "Jeff Kaufmann", "user": null, "language": "en-US", "thumbnail": null, "age": null, "page_rating_contents": 0, "page_rating_votes": 0, "page_rating_visits": 0, "page_rating": 0, "tags": [], "comments": [], "vote": 0}]