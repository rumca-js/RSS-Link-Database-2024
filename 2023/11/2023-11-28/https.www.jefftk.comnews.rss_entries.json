[{"source": "https://www.jefftk.com/news.rss", "title": "Process Substitution Without Shell?", "description": "<p><span>\n\nWhile I still write a decent amount of shell I generally try to avoid\nit.  It's hard for others to read, has a lot of sharp edges, tends to\nswallow errors, and handles the unusual situations poorly.  But one\nthing that keeps me coming back to it is how easily I can set up trees\nof processes.\n\n</span>\n\n<p>\n\nSay I have a program that reads two files together in a single pass\n[1] and writes something out.  The inputs you have are compressed, so\nyou'll need to decompress them, and the output needs to be compressed\nbefore you write it out to storage.  You could do:\n\n</p>\n\n<p>\n\n\n</p>\n\n<pre>\n# download the files\naws s3 cp \"$path1\" .\naws s3 cp \"$path2\" .\n\n# decompress the files\ngunzip \"$file1\"\ngunzip \"$file2\"\n\n# run the command\ncmd -1 \"$file1\" -2 \"$file2\" &gt; \"$fileOut\"\n\n# compress the output\ngzip \"$fileOut\"\n\n# upload the output\naws s3 cp \"$fileOut.gz\" \"$pathOut\"\n</pre>\n\n\n\n<p>\n\nThis works, but for large files it's slow and needs too much space.\nWe're waiting for each step to fini", "link": "https://www.jefftk.com/p/process-substitution-without-shell", "date_published": "2023-11-28T08:00:00+00:00", "permanent": false, "bookmarked": false, "dead": false, "artist": "Jeff Kaufmann", "album": "Jeff Kaufmann", "user": null, "language": "en-US", "thumbnail": null, "age": null, "page_rating_contents": 0, "page_rating_votes": 0, "page_rating_visits": 0, "page_rating": 0, "tags": [], "comments": [], "vote": 0}]