[{"source": "https://isocpp.org/blog/rss/category/news", "title": "Enodo, Divide et Impera  -- Lucian Radu Teodorescu", "description": "<p>\n\t<img alt=\"Enodo,_Divide_et_Impera.png\" src=\"https://isocpp.org/files/img/Enodo,_Divide_et_Impera.png\" style=\"width: 400px; margin: 10px; float: right;\" />How do you untie the knotty problem of complexity? Lucian Radu Teodorescu shows us how to divide and conquer difficult problems.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://accu.org/journals/overload/31/177/teodorescu/\">Enodo, Divide et Impera</a></h3>\n\t<p>\n\t\tBy Lucian Radu Teodorescu</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tThis article aims to analyse one of the most useful techniques in software engineering: the&nbsp;<em>divide et impera</em>&nbsp;(Divide and Conquer) technique. And maybe&nbsp;<em>the</em>&nbsp;most useful one.</p>\n\t<p>\n\t\tWe define the&nbsp;<em>divide et impera</em>&nbsp;method as a way of breaking up a problem into smaller parts and fixing those smaller parts. This applies to recursive functions (where the phrase&nbsp;<em>divide et impera</em>&nbsp;is most often used), but it will also", "link": "https://isocpp.org//blog/2023/11/enodo-divide-et-impera-lucian-radu-teodorescu", "date_published": "2023-11-29T17:56:23+00:00", "permanent": false, "bookmarked": false, "dead": false, "artist": "Standard C++ | News", "album": "Standard C++ | News", "user": null, "language": "en", "thumbnail": null, "age": null, "page_rating_contents": 0, "page_rating_votes": 0, "page_rating_visits": 0, "page_rating": 0, "tags": [], "comments": [], "vote": 0}]