[{"source": "https://isocpp.org/blog/rss/category/news", "title": "Spans, string_view, and Ranges - Four View types (C++17 to C++23) -- Bartlomiej Filipek", "description": "<p>\n\t<img alt=\"spans_string_view.png\" src=\"https://isocpp.org/files/img/spans_string_view.png\" style=\"width: 373px; margin: 10px; float: right;\" />In this blog post, we&rsquo;ll look at several different view/reference types introduced in Modern C++. The first one is&nbsp;<code>string_view</code>&nbsp;added in C++17. C++20 brought&nbsp;<code>std::span</code>&nbsp;and ranges views. The last addition is&nbsp;<code>std::mdspan</code>&nbsp;from C++23.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.cppstories.com/2023/four-views-in-cpp23/\">Spans, string_view, and Ranges - Four View types (C++17 to C++23)</a></h3>\n\t<p>\n\t\tby Bartlomiej Filipek</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\tThe&nbsp;<code>std::string_view</code>&nbsp;type is a non-owning reference to a string. It provides an object-oriented way to represent strings and substrings without the overhead of copying or allocation that comes with&nbsp;<code>std::string</code>.&nbsp;<code>std::string_view</code>&nbsp;is ", "link": "https://isocpp.org//blog/2023/11/spans-string-view-and-ranges-four-view-types-cpp17-to-c23-bartlomiej-filipe", "date_published": "2023-11-21T17:55:23+00:00", "permanent": false, "bookmarked": false, "dead": false, "artist": "Standard C++ | News", "album": "Standard C++ | News", "user": null, "language": "en", "thumbnail": null, "age": null, "page_rating_contents": 0, "page_rating_votes": 0, "page_rating_visits": 0, "page_rating": 0, "tags": [], "comments": [], "vote": 0}]