[{"source": "https://isocpp.org/blog/rss/category/news", "title": "Live and Let Die -- Martin Janzen", "description": "<p>\n\tResource lifetime management can be problematic. Martin Janzen reminds us how important destructors are and when to be mindful of their limitations.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://accu.org/journals/overload/31/177/janzen/\">Live and Let Die</a></h3>\n\t<p>\n\t\tBy Martin Janzen</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tMost experienced C++ programmers will agree that one of the best properties of our language is the ability to manage object lifecycles using constructors and destructors.</p>\n\t<p>\n\t\tBjarne Stroustrup [<a href=\"https://accu.org/journals/overload/31/177/janzen/#_idTextAnchor007\">Stroustrup19</a>] has described&nbsp;<code>ctor</code>/<code>dtor</code>&nbsp;pairs as one of C++&rsquo;s most elegant features, giving us the ability to create clean types which tidy up after themselves, with predictable performance, minimal overhead, and no need for garbage collection.</p>\n\t<p>\n\t\tIn this year&rsquo;s ACCU Conference Lightning Talks, Nico Josutti", "link": "https://isocpp.org//blog/2023/11/live-and-let-die-martin-janzen", "date_published": "2023-11-25T17:50:20+00:00", "permanent": false, "bookmarked": false, "dead": false, "artist": "Standard C++ | News", "album": "Standard C++ | News", "user": null, "language": "en", "thumbnail": null, "age": null, "page_rating_contents": 0, "page_rating_votes": 0, "page_rating_visits": 0, "page_rating": 0, "tags": [], "comments": [], "vote": 0}]