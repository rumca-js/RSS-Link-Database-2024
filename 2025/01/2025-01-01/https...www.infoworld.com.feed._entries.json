[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-01-01T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>These days, most every application has the potential to be a cross-platform application. That\u2019s great for users but often difficult for developers. Targeting more than one platform opens a whole warehouse of Pandora\u2019s boxes: how to handle paths, how to write desktop application UIs, how to compile a binary for another platform, and lots more. Here are four key concepts to guide you when writing successful cross-platform applications.</p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"microsoft-windows-is-always-the-exception\">Microsoft Windows is always the exception</h2>\n\n\n\n<p>No other operating system requires making exceptions like Microsoft Windows does. Linux and macOS are similar enough that most of",
        "id": 1814181,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3628810/4-keys-for-writing-cross-platform-apps.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "4 keys for writing cross-platform apps",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-01-01T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>The fully realized browser-based IDE has been a long time coming. Ever since the beginning of the cloud revolution, I\u2019ve thought a powerful and flexible remote IDE was just around the corner.\u00a0I imagined a development tool that could use any virtual machine as a development platform.\u00a0</p>\n\n\n\n<p>I think that dream has finally been realized. I recently tried out <a href=\"https://vscode.dev/\" data-type=\"link\" data-id=\"https://vscode.dev/\">VSCode.dev</a>, and while there are some rough edges to be worked out, it\u2019s already a pleasure to use.</p>\n\n\n\n<p><a href=\"https://www.infoworld.com/article/2335960/what-is-visual-studio-code-microsofts-extensible-code-editor.html\" data-type=\"link\" data-id=\"https:/",
        "id": 1814180,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3626667/intro-to-vscode-dev-the-ide-in-your-browser.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Intro to VSCode.dev: The IDE in your browser",
        "vote": 0
    }
]