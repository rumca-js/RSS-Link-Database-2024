[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-05-27T00:00:00+00:00", "description": "<p>In this blog post, we&rsquo;ll show how to implement a custom pipe operator and apply it to a data processing example. Thanks to C++23 and <code>std::expected</code>we can write a rather efficient framework that easily handles <code>unexpected</code> outcomes.</p>\n<p>This is a collaborative guest post by <strong>prof. Bogus\u0142aw Cyganek</strong>:</p>\n\n\n<div style=\"display: flex;\">        \n        <div style=\"margin-left: 20px;\">\n            <a href=\"https://amzn.to/2OB3bBy\" target=\"_blank\"><img alt=\"Prof. Cyganek's Book\" src=\"https://www.cppstories.com/2023/images/cyganek_intro.jpg\" width=\"170px\" /></a>\n        </div>\n        <div>\n            <blockquote>\n                <p><strong>Prof. Cyganek</strong> is a researcher and lecturer at the Department of Electronics, AGH University of Science and Technology in Cracow, Poland. He has worked as a software engineer for a number of companies such as Nisus Writer USA, Compression Techniques USA, Manta Corp. USA, Visual Atoms UK, Wroclaw U", "language": "en-us", "link": "https://www.cppstories.com/2024/pipe-operator", "manual_status_code": 0, "page_rating": 32, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.cppstories.com/index.xml", "source_obj__id": 47, "status_code": 0, "tags": [], "thumbnail": null, "title": "Function Composition and the Pipe Operator in C++23 \u2013 With std::expected", "user": null, "vote": 0}]