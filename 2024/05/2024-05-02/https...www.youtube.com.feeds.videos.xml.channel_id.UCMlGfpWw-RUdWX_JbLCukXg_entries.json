[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-05-02T15:04:10+00:00", "description": "https://cppcon.org/\n---\n\nLightning Talk: Writing a Better std::move - Jonathan M\u00fcller - CppCon 2023\nhttps://github.com/CppCon/CppCon2023\n\nstd::move allows the creation of const rvalue references, which is almost always wrong. It also allows moving out of lvalue references, which can be dangerous since you don't have real ownership over them and a caller might not expect the object to disappear. Let's fix those problems using macros, reflection, and more macros.\n---\n\nJonathan M\u00fcller\n\nJonathan is a library developer at think-cell. In his spare time, he works on various C++ open source libraries for memory allocation, cache-friendly containers, or parsing. He also blogs at foonathan.net and is a member of the C++ standardization committee.\n---\n\nVideos Filmed & Edited by Bash Films: http://www.BashFilms.com\nYouTube Channel Managed by Digital Medium Ltd: https://events.digital-medium.co.uk\n---\n\nRegistration for CppCon: https://cppcon.org/registration/\n\n#cppcon #cppprogramming #cpp", "language": null, "link": "https://www.youtube.com/watch?v=hvnl6T2MnUk", "manual_status_code": 0, "page_rating": 32, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.youtube.com/feeds/videos.xml?channel_id=UCMlGfpWw-RUdWX_JbLCukXg", "source_obj__id": 420, "status_code": 0, "tags": [], "thumbnail": "https://i1.ytimg.com/vi/hvnl6T2MnUk/hqdefault.jpg", "title": "Lightning Talk: Writing a Better std::move - Jonathan M\u00fcller - CppCon 2023", "user": null, "vote": 0}]