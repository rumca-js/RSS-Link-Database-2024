[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-05T20:56:09+00:00", "description": "<p>\n\t<img alt=\"sieger-opaquepattern.png\" src=\"https://isocpp.org/files/img/sieger-opaquepattern.png\" style=\"width: 389px; margin: 10px; float: right;\" />After reading this article, you should understand the basics of the opaque pointer pattern and how you can implement it using&nbsp;<code>std::unique_ptr</code>. I also gave some hints on when it is appropriate to use it and when maybe not.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://danielsieger.com/blog/2024/08/02/cpp-opaque-pointer-pattern.html\">Opaque Pointer Pattern in C++</a></h3>\n\t<p>\n\t\tby Daniel Sieger</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\tThe basic problem is that C++ class declarations expose private details of the class. Private member functions and data members need to be declared in the header. Here&rsquo;s an example for illustration:<br />\n\t<br />\n\t<span style=\"background-color: rgb(242, 242, 242);\">// Point.h</span></blockquote>\n<blockquote>\n\t<p>\n\t\t<br />\n\t\tclass Point<br />\n\t\t{<br />\n\t\tpublic:<br />\n", "id": 1091160, "language": null, "link": "https://isocpp.org//blog/2024/09/opaque-pointer-pattern-in-cpp-daniel-sieger", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "Opaque Pointer Pattern in C++ -- Daniel Sieger", "user": null, "vote": 0}]