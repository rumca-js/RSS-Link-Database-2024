[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-11T20:14:20+00:00", "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Node.js 22.8.0, the latest release of the event-driven <a href=\"https://www.infoworld.com/article/2254485/what-is-nodejs-javascript-runtime-explained.html\">JavaScript runtime</a>, adds a JavaScript API to enable on-disk caching of all modules loaded after the API is called, presenting a caching option for code.</p>\n\n\n\n<p>The API is called <code>module.enable.CompileCache()</code>. It overrides the <code>NODE_COMPILE_CACHE</code> environment variable, which only end users could use to enable on-disk caching. The new API lets tool and library authors manage the caching of their own code. The solution is a built-in alternative to <a href=\"https://www.npmjs.com/package/v8-compile-cache\">v8-compile-c", "id": 1128000, "language": "en-US", "link": "https://www.infoworld.com/article/3516346/node-js-adds-built-in-api-for-on-disk-caching.html", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 86, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.infoworld.com/feed/", "source_obj__id": 468, "status_code": 0, "tags": [], "thumbnail": null, "title": "Node.js adds built-in API for on-disk caching", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-11T09:00:00+00:00", "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Working with files on the server is a perennial need for developers.\u00a0Server-side <a href=\"https://www.infoworld.com/article/3441178/what-is-javascript-the-full-stack-programming-language.html\">JavaScript</a> platforms like <a href=\"https://www.infoworld.com/article/2254485/what-is-nodejs-javascript-runtime-explained.html\">Node</a>, <a href=\"https://www.infoworld.com/article/2256205/what-is-deno-a-better-nodejs.html\">Deno</a>, and <a href=\"https://www.infoworld.com/article/3688330/explore-bunjs-the-all-in-one-javascript-runtime.html\">Bun</a> offer a flexible and fairly simple approach to doing things with files.\u00a0This article shows you how to use the <code>fs</code> library to handle the most comm", "id": 1123783, "language": "en-US", "link": "https://www.infoworld.com/article/3504664/file-handling-in-server-side-javascript.html", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 86, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.infoworld.com/feed/", "source_obj__id": 468, "status_code": 0, "tags": [], "thumbnail": null, "title": "File handling in server-side JavaScript", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-11T07:00:00+00:00", "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>TypeScript 5.6, the latest version of <a href=\"https://www.infoworld.com/article/2257305/what-is-typescript-strongly-typed-javascript.html\">Microsoft\u2019s strongly typed JavaScript variant</a>, is now available as a production release. The update features capabilities that include disallowing nullish and truthy checks on syntax that never varies on nullishness or truthiness.</p>\n\n\n\n<p>Unveiled <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/\">September 9</a>, TypeScript can be accessed via NPM using the following command: <code>npm install -D -typescript</code>. The update also can be accessed through <a href=\"https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild\"", "id": 1123259, "language": "en-US", "link": "https://www.infoworld.com/article/3513917/typescript-5-6-now-generally-available.html", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 86, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.infoworld.com/feed/", "source_obj__id": 468, "status_code": 0, "tags": [], "thumbnail": null, "title": "TypeScript 5.6 now generally available", "user": null, "vote": 0}]