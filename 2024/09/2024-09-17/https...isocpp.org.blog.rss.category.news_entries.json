[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-17T21:12:34+00:00", "description": "<p>\n\t<img alt=\"logo.png\" src=\"https://isocpp.org/files/img/logo.png\" style=\"width: 225px; margin: 10px; float: right;\" />We&rsquo;ve seen formatting for simple classes and more complicated types. Spencer Collyer finishes his series by showing us how to apply specific formatting to existing classes.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://accu.org/journals/overload/32/182/collyer/\">User-Defined Formatting in std::format &ndash; Part 3</a></h3>\n\t<p>\n\t\tby Spencer Collyer</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tIn the previous articles in this series [<a href=\"https://accu.org/journals/overload/32/182/collyer/#_idTextAnchor000\">Collyer24a</a>], [<a href=\"https://accu.org/journals/overload/32/182/collyer/#_idTextAnchor001\">Collyer24b</a>] I showed how to write classes to format user-defined classes and container classes using the&nbsp;<code>std::format</code>&nbsp;library.</p>\n\t<p>\n\t\tIn this article I will show you how to create format wrappers, special purpose c", "id": 1163917, "language": null, "link": "https://isocpp.org//blog/2024/09/user-defined-formatting-in-stdformat-part-3-spencer-collyer", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "User-Defined Formatting in std::format \u2013 Part 3 -- Spencer Collyer", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-17T16:26:10+00:00", "description": "<p>\n\tMeeting C++ now offers 4 trainings that align with <a href=\"https://meetingcpp.com/2024/\">Meeting C++ 2024</a>, and will be held in the last week of November.</p>\n<blockquote>\n\t<h2>\n\t\t<a href=\"https://meetingcpp.com/meetingcpp/news/items/Adding-Cpp-trainings-to-Meeting-Cpp-2024.html\">Adding C++ trainings to Meeting Cpp 2024</a></h2>\n</blockquote>\n<blockquote>\n\t<p>\n\t\tby Jens Weller</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tTrainings listing</p>\n\t<p>\n\t\t&nbsp;&nbsp;&nbsp; C++ for C Developers - Migrating from C to C++ - a two day training by Slobodan Dmitrovic starting November 25th<br />\n\t\t&nbsp;&nbsp;&nbsp; Program with GUTs - a half day training by Kevlin Henney on November 25th<br />\n\t\t&nbsp;&nbsp;&nbsp; Generic programming in C++ with templates and auto - full day training by Nicolai Josuttis on November 28th<br />\n\t\t&nbsp;&nbsp;&nbsp; Concepts, Ranges, and Views - The New Way of Programming in C++ - full day training by Nicolai Josuttis on November 29th<", "id": 1161817, "language": null, "link": "https://isocpp.org//blog/2024/09/adding-trainings-to-meeting-cpp-2024", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "Adding trainings to Meeting C++ 2024", "vote": 0}]