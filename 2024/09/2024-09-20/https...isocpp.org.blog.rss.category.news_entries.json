[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-09-20T21:28:28+00:00", "description": "<p>\n\t<img alt=\"portrait2018.jpg\" src=\"https://isocpp.org/files/img/portrait2018.jpg\" style=\"width: 250px; margin: 10px; float: right; height: 250px;\" />JSON is a widely-used format for data exchange, but in C++, handling JSON efficiently can be challenging. While current solutions like simdjson offer high-speed processing, upcoming features in C++26, such as powerful reflection, promise to simplify and accelerate the serialization and deserialization of JSON, making it both faster and more convenient for developers.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://lemire.me/blog/2024/08/13/reflection-based-json-in-c-at-gigabytes-per-second/\">Reflection-based JSON in C++ at Gigabytes per Second</a></h3>\n\t<p>\n\t\tby Daniel Lemire</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tJSON (JavaScript Object Notation) is a popular format for storing and transmitting data. It uses human-readable text to represent structured data in the form of attribute&ndash;value pairs and arrays. E.g.", "id": 1184239, "language": null, "link": "https://isocpp.org//blog/2024/09/reflection-based-json-in-cpp-at-gigabytes-per-second-daniel-lemire", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 314, "source_url": "https://isocpp.org/blog/rss/category/news", "status_code": 0, "tags": [], "thumbnail": null, "title": "Reflection-based JSON in C++ at Gigabytes per Second -- Daniel Lemire", "vote": 0}]