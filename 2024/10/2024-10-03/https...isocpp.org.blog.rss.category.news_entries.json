[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-10-03T19:17:18+00:00", "description": "<p>\n\t<img alt=\"revzin200930.png\" src=\"https://isocpp.org/files/img/revzin200930.png\" style=\"width: 159px; margin: 10px; float: right;\" />Previously, I tried to answer the question:&nbsp;<a href=\"https://brevzin.github.io/c++/2024/07/24/constexpr-alloc/\">what&rsquo;s so hard about&nbsp;<code>constexpr</code>&nbsp;allocation?</a>. Today, we continue what will become a series of posts about attempting to explain the issues behind a bunch of hard problems we&rsquo;re trying to solve. The next problem: class types as non-type template parameters.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://brevzin.github.io/c++/2024/08/15/cnttp/\">What&#39;s So Hard About Cass Types as Non-type Template Parameters?</a></h3>\n\t<p>\n\t\tby Barry Revzin</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tBefore C++20, the only types you could use as non-type template parameters were scalar types (like&nbsp;<code>int</code>&nbsp;and&nbsp;<code>enum</code>s, but not floating point), pointers (including po", "id": 1260834, "language": null, "link": "https://isocpp.org//blog/2024/10/whats-so-hard-about-cass-types-as-non-type-template-parameters-barry-revzin", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 314, "source_url": "https://isocpp.org/blog/rss/category/news", "status_code": 0, "tags": [], "thumbnail": null, "title": "What's So Hard About Cass Types as Non-type Template Parameters? -- Barry Revzin", "vote": 0}]