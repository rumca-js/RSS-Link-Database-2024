[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T19:20:45+00:00", "description": "<!-- SC_OFF --><div class=\"md\"><p>Django Rest newbie here and struggling to figure out the correct / recommended way. Please hear me out. My application will have user, subject and question models. Initially there will not even be any subjects. An admin will create subjects as needed and assign some users to their respective subjects (they are subject experts / teachers of that subject). And a user will need to be a teacher of a certain subject to do CRUD on the questions of that subject. Without this permission no one should be able to do CRUD on questions. So, should I create groups whenever a new subject is added as well as a custom permission for accessing questions of that subject? Or, some kind of dynamic role? Should I modify the default group and add some more fields (like subject id for that group)?</p> <p>Please note, I am trying not to clutter my app with too much if/else statemets. I am really hoping viewsets with permission classes should be enough. Also, please recommen", "id": 1466458, "language": null, "link": "https://www.reddit.com/r/django/comments/1gl6lzh/help_with_groups_roles_permissions", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "Help with Groups / Roles / Permissions", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T18:17:37+00:00", "description": "<!-- SC_OFF --><div class=\"md\"><p>Conditional expressions like Case and When perform conditional logic directly in your queries. For example, if you want to annotate each book with a &quot;bestseller&quot; label based on the number of sales.</p> <p>This query adds a field is_bestseller to each book, where 1 indicates it&#39;s a bestseller and 0 otherwise.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/djv-mo\"> /u/djv-mo </a> <br/> <span><a href=\"https://i.redd.it/cx3eyiy2pbzd1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1gl535a/django_case_when_orm_tip/\">[comments]</a></span>", "id": 1465965, "language": null, "link": "https://www.reddit.com/r/django/comments/1gl535a/django_case_when_orm_tip", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "Django Case When ORM tip", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T17:44:23+00:00", "description": "<!-- SC_OFF --><div class=\"md\"><p>I published my article about lazy fetching today on medium for Django developers especially those new to the framework. I wrote everything based on personal experience.</p> <p><a href=\"https://medium.com/@mikyrola8/understanding-lazy-fetching-in-django-a-deep-dive-8159c4822cd4\">https://medium.com/@mikyrola8/understanding-lazy-fetching-in-django-a-deep-dive-8159c4822cd4</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Dense-Fee-9859\"> /u/Dense-Fee-9859 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1gl4ajx/an_article_on_lazy_fetching_in_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1gl4ajx/an_article_on_lazy_fetching_in_django/\">[comments]</a></span>", "id": 1465964, "language": null, "link": "https://www.reddit.com/r/django/comments/1gl4ajx/an_article_on_lazy_fetching_in_django", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "An article on lazy fetching in Django", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T14:20:20+00:00", "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gbeier\"> /u/gbeier </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=0-iuJgfQMOw\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1gkzl07/prototyping_with_nanodjango_uv_and_ninja/\">[comments]</a></span>", "id": 1464301, "language": null, "link": "https://www.reddit.com/r/django/comments/1gkzl07/prototyping_with_nanodjango_uv_and_ninja", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "Prototyping with Nanodjango, uv and ninja", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T07:50:55+00:00", "description": "<!-- SC_OFF --><div class=\"md\"><p>First let&#39;s talk about python and django ecosystem - python ecosystem is easy to understand in less time ( I&#39;m not saying it&#39;s very easy ) and user can learn Backend with Django or Flask or FastApi.</p> <p>While java &amp; spring boot ecosystem is heavy as compared to python or Javascript....</p> <p>User needs to understand jvm runtime, spring framework, JPA , then spring boot and what not in java ecosystem..</p> <p>While spring ecosystem is not bad but if java spring boot needs more time than python django.</p> <p>So if any newbie wanna start backend I would recommend first go with python django and after 6-7 months working with python then go to spring ecosystem</p> <p>Edit - well I know python django, spring boot , nodejs(js) </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/virgin_human\"> /u/virgin_human </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1gktb37/django_vs_spring_bo", "id": 1462531, "language": null, "link": "https://www.reddit.com/r/django/comments/1gktb37/django_vs_spring_boot_my_opinion", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "Django vs Spring boot - my opinion", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T06:48:34+00:00", "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Abhi_mech007\"> /u/Abhi_mech007 </a> <br/> <span><a href=\"https://www.freecodecamp.org/news/how-to-integrate-tailwind-with-django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1gkse82/how_to_integrate_tailwind_with_django/\">[comments]</a></span>", "id": 1462532, "language": null, "link": "https://www.reddit.com/r/django/comments/1gkse82/how_to_integrate_tailwind_with_django", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "How to Integrate Tailwind with Django", "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-06T01:37:36+00:00", "description": "<!-- SC_OFF --><div class=\"md\"><p>Is it feasible to host a LAN-based web app with two user roles (superuser and regular user) where:</p> <ul> <li>User credentials are stored locally in SQLite3,</li> <li>The web app pulls data from a local MongoDB for displaying the mailing list and blacklist on the dashboard,</li> <li>Superusers have CRUD access to this data, while regular users only have view and report generation permissions?</li> </ul> <p>What are the potential advantages and disadvantages of this setup?</p> <p>This is the requirements set by our manager to use a centralized local data base </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Hot-Group8088\"> /u/Hot-Group8088 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1gkn75y/implementing_a_lanbased_web_app_with_rolebased/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1gkn75y/implementing_a_lanbased_web_app_with_rolebased/\">[comments]</a><", "id": 1460980, "language": null, "link": "https://www.reddit.com/r/django/comments/1gkn75y/implementing_a_lanbased_web_app_with_rolebased", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 85, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 491, "source_url": "https://www.reddit.com/r/django/.rss", "status_code": 0, "tags": [], "thumbnail": null, "title": "Implementing a LAN-Based Web App with Role-Based Access Using SQLite3 for Authentication and MongoDB for Data Management", "vote": 0}]