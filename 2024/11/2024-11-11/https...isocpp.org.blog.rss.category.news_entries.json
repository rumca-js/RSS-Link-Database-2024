[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-11T18:11:12+00:00", "description": "<p>\n\t<img alt=\"thinkcelllogo.png\" src=\"https://isocpp.org/files/img/thinkcelllogo.png\" style=\"width: 251px; margin: 10px; float: right;\" />Probably the two most useful features added to C++20 are&nbsp;<code>requires</code>&nbsp;and&nbsp;<code>requires</code>. They make it so much easier to control overload resolution, and when combined with&nbsp;<code>if constexpr</code>&nbsp;in C++17, they allow basic reflection-based optimizations in templates. While&nbsp;<code>requires requires</code>&nbsp;has gotten a lot of (negative?!) press for controlling overload resolution, its cousin&nbsp;<code>requires &#123; requires &#125;</code>&nbsp;is a bit overlooked.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.think-cell.com/en/career/devblog/if-constexpr-requires-requires-requires\">if constexpr requires requires { requires }</a></h3>\n\t<p>\n\t\tby Jonathan M&uuml;ller</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\tC++20 added&nbsp;<code>requires</code>, a way to enable or disable a funct", "id": 1495416, "language": null, "link": "https://isocpp.org//blog/2024/11/if-constexpr-requires-requires-requires-jonathan-mueller", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 314, "source_url": "https://isocpp.org/blog/rss/category/news", "status_code": 0, "tags": [], "thumbnail": null, "title": "if constexpr requires requires { requires } -- Jonathan M\u00fcller", "vote": 0}]