[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-11-14T18:20:13+00:00", "description": "<p>\n\t<img alt=\"logo.png\" src=\"https://isocpp.org/files/img/logo.png\" style=\"width: 225px; margin: 10px; float: right;\" />Programming at compile time has been possible in C++ for a long time. Wu Yongwei considers its past, present and future.</p>\n<p>\n\tCompile-time programming is a key feature of C++. It enables writing high-performance code often unattainable in other languages. This article explores its past, present, and future applications, highlighting the diverse possibilities in C++. We&rsquo;ll briefly cover template metaprogramming, constexpr, variadic templates, static reflection, and more.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://accu.org/journals/overload/32/183/wu/\">C++ Compile-Time Programming</a></h3>\n\t<p>\n\t\tby Wu Yongwei</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tCompile-time programming is vastly different from run-time programming. The code runs during compilation, but the results can be used at run time.</p>\n\t<p>\n\t\tSome believe compile-time pro", "id": 1516811, "language": null, "link": "https://isocpp.org//blog/2024/11/cpp-compile-time-programming-wu-yongwei", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source__id": 314, "source_url": "https://isocpp.org/blog/rss/category/news", "status_code": 0, "tags": [], "thumbnail": null, "title": "C++ Compile-Time Programming -- Wu Yongwei", "vote": 0}]