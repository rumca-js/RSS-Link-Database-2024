[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-08-11T22:56:33+00:00", "description": "<p><strong><a href=\"https://poloclub.github.io/transformer-explainer/\">Transformer Explainer</a></strong></p>\nThis is a very neat interactive visualization (with accompanying essay and video - scroll down for those) that explains the Transformer architecture for LLMs, using a GPT-2 model running directly in the browser using the ONNX runtime and Andrej Karpathy's nanoGPT project.</p>\n<p><img alt=\"Screenshot of the Transformer Explainer interface, running a prompt &quot;the sky is&quot; which returns &quot;blue&quot; as the most obvious next word.\" src=\"https://static.simonwillison.net/static/2024/transformer-explainer.jpg\" />\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/explorables\">explorables</a>, <a href=\"https://simonwillison.net/tags/d3\">d3</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a></p>", "id": 1009066, "language": "en-us", "link": "https://simonwillison.net/2024/Aug/11/transformer-explainer/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Transformer Explainer", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-08-11T18:38:57+00:00", "description": "<p><strong><a href=\"https://twitter.com/awesomekling/status/1822236888188498031\">Ladybird set to adopt Swift</a></strong></p>\nAndreas Kling on the Ladybird browser project's search for a memory-safe language to use in conjunction with their existing C++ codebase:</p>\n<blockquote>\n<p>Over the last few months, I've asked a bunch of folks to pick some little part of our project and try rewriting it in the different languages we were evaluating. The feedback was very clear: everyone preferred Swift!</p>\n</blockquote>\n<p>Andreas previously worked for Apple on Safari, but this was still a surprising result given the current relative lack of widely adopted open source Swift projects outside of the Apple ecosystem.</p>\n<p>This change is currently blocked on the upcoming Swift 6 release:</p>\n<blockquote>\n<p>We aren't able to start using it just yet, as the current release of Swift ships with a version of Clang that's too old to grok our existing C++ codebase. But when Swift 6 comes out of beta", "id": 1008621, "language": "en-us", "link": "https://simonwillison.net/2024/Aug/11/ladybird-set-to-adopt-swift/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Ladybird set to adopt Swift", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-08-11T18:29:26+00:00", "description": "<p><strong><a href=\"https://peps.python.org/pep-0750/\">PEP 750 \u2013 Tag Strings For Writing Domain-Specific Languages</a></strong></p>\nA new PEP by Jim Baker, Guido van Rossum and Paul Everitt that proposes introducing a feature to Python inspired by JavaScript's <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\">tagged template literals</a>.</p>\n<p>F strings in Python already use a <code>f\"f prefix\"</code>, this proposes allowing any Python symbol in the current scope to be used as a string prefix as well.</p>\n<p>I'm excited about this. Imagine being able to compose SQL queries like this:</p>\n<pre><span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">sql\"select * from articles where id = <span class=\"pl-s1\"><span class=\"pl-kos\">{</span><span class=\"pl-s1\">id</span><span class=\"pl-kos\">}</span></span>\"</span></pre>\n\n<p>Where the <code>sql</code> tag ensures that the <code>{id}</code> value there is cor", "id": 1008622, "language": "en-us", "link": "https://simonwillison.net/2024/Aug/11/pep-750/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "PEP 750 \u2013 Tag Strings For Writing Domain-Specific Languages", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-08-11T18:06:19+00:00", "description": "<p><strong><a href=\"https://twitter.com/dzhng/status/1822380811372642378\">Using gpt-4o-mini as a reranker</a></strong></p>\nTip from David Zhang: \"using gpt-4-mini as a reranker gives you better results, and now with strict mode it's just as reliable as any other reranker model\".</p>\n<p>David's code here demonstrates the <a href=\"https://sdk.vercel.ai/\">Vercel AI SDK</a> for TypeScript, and its support for <a href=\"https://sdk.vercel.ai/docs/ai-sdk-core/generating-structured-data\">structured data</a> using <a href=\"https://zod.dev/\">Zod schemas</a>.</p>\n<div class=\"highlight highlight-source-ts\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">generateObject</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">model</span>: <span class=\"pl-s1\">gpt4MiniModel</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-c1\">prompt</span>: <span class=\"pl-s\">`Given", "id": 1008623, "language": "en-us", "link": "https://simonwillison.net/2024/Aug/11/using-gpt-4o-mini-as-a-reranker/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Using gpt-4o-mini as a reranker", "user": null, "vote": 0}]