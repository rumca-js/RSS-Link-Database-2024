[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-06-07T22:40:16+00:00", "description": "<p>\n\t<img alt=\"BartlomiejFilipek-expected.png\" src=\"https://isocpp.org/files/img/BartlomiejFilipek-expected.png\" style=\"width: 385px; margin: 10px; float: right;\" />In the&nbsp;<a href=\"https://www.cppstories.com/2024/expected-cpp23/\">article about&nbsp;<code>std::expected,</code></a>&nbsp;I introduced the type and showed some basic examples, and in this text, you&rsquo;ll learn how it is implemented.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.cppstories.com/2024/expected-cpp23-internals/\">Understand Internals of std::expected</a></h3>\n\t<p>\n\t\tby Bartlomiej Filipek</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tIn short,&nbsp;<code>std::expected</code>&nbsp;should contain two data members: the actual expected value and the unexpected error object. So, in theory, we could use a simple structure:</p>\n\t<div>\n\t\t<pre tabindex=\"0\">\n<code>template &lt;class _Ty, class _Err&gt; &#10;struct expected {  &#10;     /*... lots of code ... */  &#10;     _Ty _Value;  &#10;     _E", "language": "en", "link": "https://isocpp.org//blog/2024/06/understand-internals-of-stdexpected-bartlomiej-filipek", "manual_status_code": 0, "page_rating": 32, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "Understand Internals of std::expected -- Bartlomiej Filipek", "user": null, "vote": 0}]