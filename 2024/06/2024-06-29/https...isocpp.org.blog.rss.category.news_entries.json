[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-06-29T21:46:18+00:00", "description": "<p>\n\t<img alt=\"RaymondChen_5in-150x150.jpg\" src=\"https://isocpp.org/files/img/RaymondChen_5in-150x150.jpg\" style=\"width: 150px; margin: 10px; float: right;\" />In recent discussions around the use of std::move in C++, questions have arisen regarding its potential overuse and the compiler's treatment of its return values. Addressing concerns raised by developers like Jonathan Duncan, this article delves into the nuances of <code>std::move</code>, examining whether its current implementation aligns with compiler optimizations and proposing potential enhancements for more efficient code generation.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://devblogs.microsoft.com/oldnewthing/20240603-00/?p=109842\">More on harmful overuse of <code>std::move</code></a></h3>\n\t<p>\n\t\tby Raymond Chen</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tSome time ago, I wrote about&nbsp;<a href=\"https://devblogs.microsoft.com/oldnewthing/20231124-00/?p=109059\" title=\"On harmful overuse of std::move\">h", "id": 791253, "language": "en", "link": "https://isocpp.org//blog/2024/06/more-on-harmful-overuse-of-stdmove-raymond-chen", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "More on Harmful Overuse of std::move -- Raymond Chen", "user": null, "vote": 0}]