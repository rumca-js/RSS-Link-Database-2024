[{"page_rating": 0, "bookmarked": false, "title": "Optimizing the Unoptimizable: A Journey to Faster C++ Compile Times -- Victor Zverovich", "tags": [], "link": "https://isocpp.org//blog/2024/02/optimizing-the-unoptimizable-a-journey-to-faster-cpp-compile-times", "language": "en", "page_rating_contents": 0, "album": "", "artist": null, "page_rating_visits": 0, "user": null, "description": "<p>\n\t<img alt=\"zverovich-compiletimes.jpg\" src=\"https://isocpp.org/files/img/zverovich-compiletimes.jpg\" style=\"width: 400px; margin: 10px; float: right;\" />In this post, Victor talks about bringing compile times of the {fmt} library on par with the C standard I/O library (stdio).</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://vitaut.net/posts/2024/faster-cpp-compile-times/\">Optimizing the Unoptimizable: A Journey to Faster C++ Compile Times</a></h3>\n\t<p>\n\t\tby Victor Zverovich</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tFirst some background: {fmt} is a popular open-source formatting library for C++ that provides a better alternative to C++ iostreams and C stdio. It has already surpassed stdio in many areas:</p>\n\t<ul>\n\t\t<li>\n\t\t\tType safety with&nbsp;<a href=\"https://vitaut.net/posts/2021/safe-formatting-api/\">compile-time format string checks</a>&nbsp;available by default since C++20 and as an opt in for C++14/17. Runtime format strings are also safe to use in", "thumbnail": null, "comments": [], "date_published": "2024-02-20T17:50:05+00:00", "source": "https://isocpp.org/blog/rss/category/news", "page_rating_votes": 0, "permanent": false, "age": null, "dead": false, "source_obj__id": 546, "vote": 0}]