[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-04-03T14:58:21+00:00", "description": "<p><a href=\"https://lukeplant.me.uk/blog/posts/enforcing-conventions-in-django-projects-with-introspection/\">Enforcing conventions in Django projects with introspection</a></p>\n<p>Luke Plant shows how to use the Django system checks framework to introspect models on startup and warn if a DateTime or Date model field has been added that doesn&#x27;t conform to a specific naming convention.</p>\n\n<p>Luke also proposes &quot;*_at&quot; as a convention for DateTimes, contrasting with &quot;*_on&quot; or &quot;*_date&quot; (I prefer the latter) for Dates.</p>\n\n    <p>Via <a href=\"https://lobste.rs/s/4nnfdb/enforcing_conventions_django_projects\">lobste.rs</a></p>", "language": "en-us", "link": "https://simonwillison.net/2024/Apr/3/enforcing-conventions-in-django/#atom-everything", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Enforcing conventions in Django projects with introspection", "user": null, "vote": 0}]