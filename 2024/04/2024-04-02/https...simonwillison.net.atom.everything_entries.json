[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-04-02T19:38:19+00:00", "description": "<p><a href=\"https://wicky.nillia.ms/cally/accessibility/\">Cally: Accessibility statement</a></p>\n<p>Cally is a neat new open source date (and date range) picker Web Component by Nick Williams.</p>\n\n<p>It&#x27;s framework agnostic and weighs less than 9KB grilled, but the best feature is this detailed page of documentation covering its accessibility story, including how it was tested - in JAWS, NVDA and VoiceOver.</p>\n\n<p>I&#x27;d love to see other open source JavaScript libraries follow this exanple.</p>\n\n    <p>Via <a href=\"https://twitter.com/wickynilliams/status/1775208741392052299\">@wickynilliams</a></p>", "language": "en-us", "link": "https://simonwillison.net/2024/Apr/2/cally-accessibility-statement/#atom-everything", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Cally: Accessibility statement", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-04-02T16:09:57+00:00", "description": "<p><a href=\"https://blog.cloudflare.com/python-workers\">Bringing Python to Workers using Pyodide and WebAssembly</a></p>\n<p>Cloudflare Workers is Cloudflare&#x27;s serverless hosting tool for deploying server-side functions to edge locations in their CDN.</p>\n\n<p>They just released Python support, accompanied by an extremely thorough technical explanation of how they got that to work. The details are fascinating.</p>\n\n<p>Workers runs on V8 isolates, and the new Python support was implemented using Pyodide (CPython compiled to WebAssembly) running inside V8.</p>\n\n<p>Getting this to work performantly and ergonomically took a huge amount of work.</p>\n\n<p>There are too many details in here to effectively summarize, but my favorite detail is this one:</p>\n\n<p>&quot;We scan the Worker\u2019s code for import statements, execute them, and then take a snapshot of the Worker\u2019s WebAssembly linear memory. Effectively, we perform the expensive work of importing packages at deploy time, rather than at r", "language": "en-us", "link": "https://simonwillison.net/2024/Apr/2/cloudflare-python-workers/#atom-everything", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Bringing Python to Workers using Pyodide and WebAssembly", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-04-02T15:19:39+00:00", "description": "<blockquote cite=\"https://docs.google.com/document/d/1ptHfoKWn0xbNSJgdkH8_3z4PHLC_f36MutFTTRf14I0/edit#bookmark=id.y7b1cw99raad\"><p>LLMs are like a trained circus bear that can make you porridge in your kitchen. It&#x27;s a miracle that it&#x27;s able to do it at all, but watch out because no matter how well they can act like a human on some tasks, they&#x27;re still a wild animal. They might ransack your kitchen, and they could kill you, accidentally or intentionally!</p></blockquote><p class=\"cite\">&mdash; <a href=\"https://docs.google.com/document/d/1ptHfoKWn0xbNSJgdkH8_3z4PHLC_f36MutFTTRf14I0/edit#bookmark=id.y7b1cw99raad\">Alex Komoroske</a>", "language": "en-us", "link": "https://simonwillison.net/2024/Apr/2/alex-komoroske/#atom-everything", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Quoting Alex Komoroske", "user": null, "vote": 0}]