[{"description": "<p>\n\t<img alt=\"SANDOR_DARGO_ROUND.JPG\" src=\"https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG\" style=\"width: 200px; margin: 10px; float: right; height: 204px;\" />In this post, we are going to review two changes related to allocators in C++. One is about providing size information about the allocated memory and the other is about how CTAD should happen for containers with non-default allocators.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.sandordargo.com/blog/2024/01/10/cpp23-and-allocators\">C++23: Allocator Related Changes</a></h3>\n\t<p>\n\t\tby Sandor Dargo</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\t<a href=\"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0401r6.html\">P0401R6</a>&nbsp;gives a new way to allocate memory on the heap to limit spurious reallocations.</p>\n\t<p>\n\t\tThe new interface of&nbsp;<code>std::allocator</code>&nbsp;looks like this, but there is also a free function version of it.</p>\n\t<pre>\ntemplate&lt;class Pointer&gt;&#10;  ", "thumbnail": null, "source": "https://isocpp.org/blog/rss/category/news", "link": "https://isocpp.org//blog/2024/03/cpp23-allocator-related-changes-sandor-dargo", "permanent": false, "page_rating_contents": 94, "title": "C++23: Allocator Related Changes -- Sandor Dargo", "album": "", "page_rating": 94, "language": "en", "page_rating_visits": 0, "tags": [], "date_published": "2024-03-13T20:49:38+00:00", "user": null, "vote": 0, "artist": null, "dead": false, "comments": [], "bookmarked": false, "age": null, "source_obj__id": 314, "page_rating_votes": 0}]