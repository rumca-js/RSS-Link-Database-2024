[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T20:00:15+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"450\" src=\"https://hackaday.com/wp-content/uploads/2024/03/electrospinning.png?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>When you think about additive manufacturing, thoughts naturally turn to that hot-glue squirting CNC machine sitting on your bench and squeezing whatever plastic doodad you need. But 3D printing isn&#8217;t <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/electrospinning-artificial-heart-valves/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/electrospinning-artificial-heart-valves", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/electrospinning.png", "title": "Electrospinning Artificial Heart Valves", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T18:30:18+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"400\" src=\"https://hackaday.com/wp-content/uploads/2024/03/ibm.png?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>If you think of IBM mainframe computers, you most likely are thinking of the iconic S/360 or the slightly newer S/370. But what about the 7070 from 1958? It had <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/retrotechtacular-the-ibm-7070/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/retrotechtacular-the-ibm-7070", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/ibm.png", "title": "Retrotechtacular: The IBM 7070", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T16:00:25+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"484\" src=\"https://hackaday.com/wp-content/uploads/2016/05/microphone.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>It was Dan&#8217;s turn behind the mic with Elliot this time as we uncovered the latest from the world of hacking, and what an eclectic mix it was. It was <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/hackaday-podcast-episode-264-cheap-minimills-65-in-1-electronics-and-time-on-moon/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/hackaday-podcast-episode-264-cheap-minimills-65-in-1-electronics-and-time-on-moon", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2016/05/microphone.jpg", "title": "Hackaday Podcast Episode 264: Cheap Minimills, 65-in-1 Electronics, and Time on Moon", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T15:30:03+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"450\" src=\"https://hackaday.com/wp-content/uploads/2024/03/cookies-featured.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>We&#8217;re sure you&#8217;ll agree that there are many annoying things on the Web. Which of them we rate as most annoying depends on personal view, but we&#8217;re guessing that quite <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/the-most-annoying-thing-on-the-internet-isnt-really-necessary/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/the-most-annoying-thing-on-the-internet-isnt-really-necessary", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/cookies-featured.jpg", "title": "The Most Annoying Thing On The Internet Isn\u2019t Really Necessary", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T14:00:38+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"484\" src=\"https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>The Linux command wall is a hold-over from the way Unix machines used to be used. It&#8217;s an abbreviation of Write to ALL, and it was first included in AT&#38;T <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/this-week-in-security-peering-through-the-wall-apples-gofetch-and-sha-256/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/this-week-in-security-peering-through-the-wall-apples-gofetch-and-sha-256", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2016/01/darkarts.jpg", "title": "This Week in Security: Peering Through the Wall, Apple\u2019s GoFetch, and SHA-256", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T11:00:20+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"533\" src=\"https://hackaday.com/wp-content/uploads/2024/03/how_not_to_get_hit_by_self-driving_car_fire.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>In the discussions about how dangerous self-driving cars are &#8211; or aren&#8217;t &#8211; one thing is sorely missing, and that is an interactive game in which you do your best <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/art-exhibit-lets-you-hide-from-self-driving-cars/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/art-exhibit-lets-you-hide-from-self-driving-cars", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/how_not_to_get_hit_by_self-driving_car_fire.jpg", "title": "Art Exhibit Lets You Hide From Self-Driving Cars", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T08:00:51+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"450\" src=\"https://hackaday.com/wp-content/uploads/2024/03/lora-mcu-featured.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>A LoRa project has traditionally required a dedicated radio module, because it&#8217;s a commercially licenced protocol. But as the way it works has been progressively reverse engineered, it&#8217;s become ever <a class=\"read-more\" href=\"https://hackaday.com/2024/03/29/lora-with-no-radio/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/29/lora-with-no-radio", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/lora-mcu-featured.jpg", "title": "LoRA, With No Radio", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T05:00:25+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"619\" src=\"https://hackaday.com/wp-content/uploads/2024/03/8088_prefetch-die.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>Cache prefetching is what allows processors to have data and/or instructions ready for use in a fast local cache rather than having to wait for a fetch request to trickle <a class=\"read-more\" href=\"https://hackaday.com/2024/03/28/the-intel-8088-and-8086-processors-instruction-prefetch-circuitry/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/28/the-intel-8088-and-8086-processors-instruction-prefetch-circuitry", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2024/03/8088_prefetch-die.jpg", "title": "The Intel 8088 and 8086 Processor\u2019s Instruction Prefetch Circuitry", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-03-29T02:00:46+00:00", "description": "<div><img alt=\"\" class=\"attachment-large size-large wp-post-image\" height=\"484\" src=\"https://hackaday.com/wp-content/uploads/2020/05/LinuxFu.jpg?w=800\" style=\"margin: 0 auto; margin-bottom: 15px;\" width=\"800\" /></div>[Michael Lynch] encountered a strange situation. Why was compiling then running his program nearly 10x faster than just running the program by itself? [Michael] ran into this issue while benchmarking <a class=\"read-more\" href=\"https://hackaday.com/2024/03/28/is-your-mental-model-of-bash-pipelines-wrong/\">&#8230;read more</a>", "language": "en-US", "link": "https://hackaday.com/2024/03/28/is-your-mental-model-of-bash-pipelines-wrong", "manual_status_code": 0, "page_rating": 100, "page_rating_contents": 100, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://hackaday.com/feed", "source_obj__id": 140, "status_code": 0, "tags": [], "thumbnail": "https://hackaday.com/wp-content/uploads/2020/05/LinuxFu.jpg", "title": "Is Your Mental Model of Bash Pipelines Wrong?", "user": null, "vote": 0}]