[{"permanent": false, "tags": [], "language": "en", "user": null, "page_rating_visits": 0, "link": "https://isocpp.org//blog/2024/03/aggregates-cpp17-vs.-c20-andreas-fertig1", "description": "<p>\n\t<img alt=\"me.png\" src=\"https://isocpp.org/files/img/me.png\" style=\"width: 200px; margin: 10px; float: right; height: 200px;\" />Sometimes the small changes between two C++ standards really bite you. Today's post is about when I got bitten by a change to aggregates in C++20.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://andreasfertig.blog/2024/02/aggregates-cpp17-vs-cpp20/\">Aggregates: C++17 vs. C++20</a></h3>\n\t<p>\n\t\tby Andreas Fertig</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\t<strong>A harmless example</strong></p>\n\t<p>\n\t\tAttendees of my training classes usually assume that I know everything. I can say sorry, but that's not the case. One day in the past, I showed the following example during a class:</p>\n\t<pre class=\"prettyprint lang-cpp\">\nstruct Point {&#10;&nbsp; int x;&#10;&nbsp; int y;&#10;};&#10;&#10;Point pt{2, 3};</pre>\n\t<p>\n\t\tThe class did cover C++17 and C++20. The code of&nbsp;<code>Point</code>&nbsp;is a reduced version for this post. We were ", "source_obj__id": 314, "page_rating_votes": 0, "date_published": "2024-03-09T20:14:05+00:00", "source": "https://isocpp.org/blog/rss/category/news", "comments": [], "album": "", "thumbnail": null, "dead": false, "page_rating_contents": 0, "page_rating": 0, "age": null, "title": "Aggregates: C++17 vs. C++20 -- Andreas Fertig", "artist": null, "vote": 0, "bookmarked": false}]