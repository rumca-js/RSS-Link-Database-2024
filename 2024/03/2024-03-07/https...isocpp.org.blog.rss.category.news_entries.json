[{"thumbnail": null, "language": "en", "comments": [], "vote": 0, "page_rating": 0, "title": "Using std::expected from C++23 -- Bartlomiej Filipek", "tags": [], "artist": null, "description": "<p>\n\t<img alt=\"c++stories-usingstd.png\" src=\"https://isocpp.org/files/img/c++stories-usingstd.png\" style=\"width: 400px; margin: 10px; float: right;\" />In this article, we&rsquo;ll go through a new vocabulary type introduced in C++23.&nbsp;<code>std::expected</code>&nbsp;is a type specifically designed to return results from a function, along with the extra error information.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.cppstories.com/2024/expected-cpp23/\">Using std::expected from C++23</a></h3>\n\t<p>\n\t\tby Bartlomiej Filipek</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\tImagine you&rsquo;re expecting a certain result from a function, but oops&hellip; things don&rsquo;t always go as planned:</blockquote>\n<blockquote>\n\t<pre class=\"prettyprint lang-cpp\">\n/*RESULT*/ findRecord(Database&amp; db, int recordId) {&#10;    if (!db.connected())&#10;        return /*??*/&#10;   &#10;    auto record = db.query(recordId);&#10;    if (record.valid) {&#10;        return record;&", "link": "https://isocpp.org//blog/2024/03/using-stdexpected-from-cpp23-bartlomiej-filipek", "page_rating_contents": 0, "source": "https://isocpp.org/blog/rss/category/news", "bookmarked": false, "permanent": false, "page_rating_votes": 0, "page_rating_visits": 0, "user": null, "album": "", "dead": false, "age": null, "source_obj__id": 314, "date_published": "2024-03-07T20:00:21+00:00"}, {"thumbnail": null, "language": "en", "comments": [], "vote": 0, "page_rating": 0, "title": "SObjectizer Tales \u2013 22. Performance, part 3--Marco Arena", "tags": [], "artist": null, "description": "<p>\n\t<img alt=\"\" src=\"https://marcoarena.files.wordpress.com/2024/02/sobjectizer-tales_22.png\" style=\"width: 300px; margin: 10px; float: right; height: 147px;\" />A new episode of the series about SObjectizer and message passing:</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://marcoarena.wordpress.com/2024/03/07/sobjectizer-tales-22/\">SObjectizer Tales &ndash; 22. Performance, part 3</a></h3>\n\t<p>\n\t\tby Marco Arena</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tIn this episode we conclude our exploration of performance considerations within the actor model, with a specific focus on typical benchmarks.</p>\n</blockquote>", "link": "https://isocpp.org//blog/2024/03/sobjectizer-tales-22.-performance-part-3", "page_rating_contents": 0, "source": "https://isocpp.org/blog/rss/category/news", "bookmarked": false, "permanent": false, "page_rating_votes": 0, "page_rating_visits": 0, "user": null, "album": "", "dead": false, "age": null, "source_obj__id": 314, "date_published": "2024-03-07T08:15:07+00:00"}]