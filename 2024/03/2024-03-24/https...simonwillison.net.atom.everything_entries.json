[{"page_rating": 94, "manual_status_code": 0, "status_code": 0, "permanent": false, "age": null, "link": "https://simonwillison.net/2024/Mar/24/reviving-pyminiracer/#atom-everything", "page_rating_contents": 94, "user": null, "description": "<p><a href=\"https://bpcreech.com/post/mini-racer/\">Reviving PyMiniRacer</a></p>\n<p>PyMiniRacer is &quot;a V8 bridge in Python&quot; - it&#x27;s a library that lets Python code execute JavaScript code in a V8 isolate and pass values back and forth (provided they serialize to JSON) between the two environments.</p>\n\n<p>It was originally released in 2016 by Sqreen, a web app security startup startup. They were acquired by Datadog in 2021 and the project lost its corporate sponsor, but in this post Ben Creech announces that he is revitalizing the project, with the approval of the original maintainers.</p>\n\n<p>I&#x27;m always interested in new options for running untrusted code in a safe sandbox. PyMiniRacer has the three features I care most about: code can&#x27;t access the filesystem or network by default, you can limit the RAM available to it and you can have it raise an error if code execution exceeds a time limit.</p>\n\n<p>The documentation includes a newly written architectu", "tags": [], "bookmarked": false, "thumbnail": null, "artist": null, "language": "en-us", "vote": 0, "date_published": "2024-03-24T17:00:55+00:00", "source": "https://simonwillison.net/atom/everything", "album": "", "page_rating_visits": 0, "comments": [], "title": "Reviving PyMiniRacer", "page_rating_votes": 0, "source_obj__id": 423}, {"page_rating": 94, "manual_status_code": 0, "status_code": 0, "permanent": false, "age": null, "link": "https://simonwillison.net/2024/Mar/24/shelmet/#atom-everything", "page_rating_contents": 94, "user": null, "description": "<p><a href=\"https://shelmet.readthedocs.io/en/latest/\">shelmet</a></p>\n<p>This looks like a pleasant ergonomic alternative to Python&#x27;s subprocess module, plus a whole bunch of other useful utilities. Lets you do things like this:</p>\n\n<p>sh.cmd(&quot;ps&quot;, &quot;aux&quot;).pipe(&quot;grep&quot;, &quot;-i&quot;, check=False).run(&quot;search term&quot;)</p>\n\n<p>I like the way it uses context managers as well: &#x27;with sh.environ({&quot;KEY1&quot;: &quot;val1&quot;})&#x27; sets new environment variables for the duration of the block, &#x27;with sh.cd(&quot;path/to/dir&quot;)&#x27; temporarily changes the working directory and &#x27;with sh.atomicfile(&quot;file.txt&quot;) as fp&#x27; lets you write to a temporary file that will be atomically renamed when the block finishes.</p>\n\n    <p>Via <a href=\"https://micro.webology.dev/2024/03/23/on-scratching-itches.html\">Jeff Triplett</a></p>", "tags": [], "bookmarked": false, "thumbnail": null, "artist": null, "language": "en-us", "vote": 0, "date_published": "2024-03-24T04:37:52+00:00", "source": "https://simonwillison.net/atom/everything", "album": "", "page_rating_visits": 0, "comments": [], "title": "shelmet", "page_rating_votes": 0, "source_obj__id": 423}]