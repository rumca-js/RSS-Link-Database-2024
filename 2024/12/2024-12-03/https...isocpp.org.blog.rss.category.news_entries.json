[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_published": "2024-12-03T19:53:30+00:00",
        "description": "<p>\n\t<img alt=\"SANDOR_DARGO_ROUND.JPG\" src=\"https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG\" style=\"width: 200px; margin: 10px; float: right; height: 200px;\" />C-style arrays are still used, mostly when you have to deal with C-libraries. They come with significant limitations, particularly when passed to functions where array decay occurs, leading to the loss of size information.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.sandordargo.com/blog/2024/11/06/std-span\">Use std::span Instead of C-style Arrays</a></h3>\n\t<p>\n\t\tby Sandor Dargo</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tWhile reading the awesome book C++ Brain Teasers by Anders Schau Knatten, I realized it might be worth writing about spans.</p>\n\t<p>\n\t\tstd::span is a class template that was added to the standard library in C++20 and you&rsquo;ll find it in the &lt;span&gt; header. A span is a non-owning object that refers to a contiguous sequence of objects with the first sequence element at positio",
        "id": 1636767,
        "language": null,
        "link": "https://isocpp.org//blog/2024/12/use-stdspan-instead-of-c-style-arrays-sandor-dargo",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Use std::span Instead of C-style Arrays -- Sandor Dargo",
        "vote": 0
    }
]