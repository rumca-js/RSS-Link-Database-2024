[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2024-12-27T17:48:28+00:00",
        "description": "<p>\n\t<img alt=\"RaymondChen_5in-150x150.jpg\" src=\"https://isocpp.org/files/img/RaymondChen_5in-150x150.jpg\" style=\"width: 150px; margin: 10px; float: right;\" />In C++, associating member objects like properties or events with their containing class often requires passing this redundantly. This article explores a generalized, flexible solution using templates, variadic arguments, and deducing this to streamline ownership initialization without boilerplate.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://devblogs.microsoft.com/oldnewthing/20241122-00/?p=110560\">In C++, How Can I Make a Default Parameter be the This Pointer of the Caller? Revisited</a></h3>\n\t<p>\n\t\tby Raymond Chen</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tSome time ago, we looked at&nbsp;<a href=\"https://devblogs.microsoft.com/oldnewthing/20231207-00/?p=109115\" title=\"In C++, how can I make a default parameter be the this pointer of the caller?\">making the default parameter of a method be the&nbsp;<code>t",
        "id": 1790068,
        "language": null,
        "link": "https://isocpp.org//blog/2024/12/in-cpp-how-can-i-make-a-default-parameter-be-the-this-pointer-of-the-caller",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "In C++, How Can I Make a Default Parameter be the This Pointer of the Caller? -- Raymond Chen",
        "vote": 0
    }
]