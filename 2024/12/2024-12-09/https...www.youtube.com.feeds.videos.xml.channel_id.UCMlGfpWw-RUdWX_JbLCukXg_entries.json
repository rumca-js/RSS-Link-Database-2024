[
    {
        "age": null,
        "album": "",
        "author": "CppCon",
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2024-12-09T15:07:05+00:00",
        "description": "https://cppcon.org\u200b\n---\n\nReusable Code, Reusable Data Structures - Sebastian Theophil - CppCon 2024\n---\n\nDRY -- don't repeat yourself -- is an important software engineering principle. Repetitive code is error-prone code. Inevitably, and sooner rather than later, we will forget to change one of these repetitive code locations. C++ offers many different tools to share code and data and I often see novice and intermediate programmers struggle with choosing the best one in each situation. We have template functions, template classes, std::variant, virtual classes and std::any. We have some common associated programming patterns like CRTP, templated base classes, template functions taking function arguments. All of these have their uses and in my talk, I want to develop some intuitions on when to use which.\n---\n\nSlides: https://github.com/CppCon/CppCon2024/blob/main/Presentations/Reusable_Code_Reusable_Data_Structures.pdf\n\nSponsored by JetBrains: https://www.jetbrains.com/clion/\n---\n\nSeb",
        "id": 1674177,
        "language": null,
        "link": "https://www.youtube.com/watch?v=5zkDeiyF5Rc",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 420,
        "source_url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCMlGfpWw-RUdWX_JbLCukXg",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://i2.ytimg.com/vi/5zkDeiyF5Rc/hqdefault.jpg",
        "title": "Reusable Code, Reusable Data Structures - Sebastian Theophil - CppCon 2024",
        "vote": 0
    }
]