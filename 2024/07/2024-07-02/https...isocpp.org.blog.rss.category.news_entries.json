[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-02T22:07:21+00:00", "description": "<p>\n\t<img alt=\"kdab.png\" src=\"https://isocpp.org/files/img/kdab.png\" style=\"width: 140px; margin: 10px; float: right;\" />In the last post of this series we started exploring how to erase an element from the middle of a vector.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.kdab.com/qt-and-trivial-relocation-part-3/\">Qt and Trivial Relocation (Part 3)</a></h3>\n\t<p>\n\t\tby Giuseppe D'Angelo</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\t<strong>The reference semantics backstab</strong></p>\n\t<p>\n\t\tLet&rsquo;s start by analyzing&nbsp;<tt>erase()</tt>&lsquo;s behavior once more.</p>\n\t<p>\n\t\tDo you remember our claim that the specific strategy used does not really matter; that is, that they are all equivalent?&nbsp;Well, not so fast!&nbsp;It is actually&nbsp;<em>quite imprecise</em>&nbsp;to say that they are all equivalent.</p>\n\t<p>\n\t\tThey may be, as long as we deal with types which have&nbsp;<em>value</em>&nbsp;semantics.&nbsp;If we instead use a type that has&nbsp;<em>refere", "id": 808875, "language": "en", "link": "https://isocpp.org//blog/2024/07/qt-and-trivial-relocation-part-3-giuseppe-dangelo", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "Qt and Trivial Relocation (Part 3) -- Giuseppe D'Angelo", "user": null, "vote": 0}]