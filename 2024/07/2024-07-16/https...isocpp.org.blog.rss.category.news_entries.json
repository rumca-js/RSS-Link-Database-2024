[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-16T22:31:36+00:00", "description": "<p>\n\t<img alt=\"fatstandish.png\" src=\"https://isocpp.org/files/img/fatstandish.png\" style=\"width: 259px; margin: 10px; float: right;\" />How do you expose a C++ object to a TypeScript layer or other scripting language? Russell K. Standish demonstrates an approach using a RESTService API that is scripting-language independent.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://accu.org/journals/overload/32/181/standish/\">Fat API Bindings of C++ Objects into Scripting Languages</a></h3>\n\t<p>\n\t\tby Russell K. Standish</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tA&nbsp;<em>fat</em>&nbsp;API exposes nearly all of a C++ object&rsquo;s public attributes and methods to a consuming environment, such as a scripting language, or web client. This can be contrasted with a conventional, or&nbsp;<em>thin</em>&nbsp;API, where the API is defined up front, and the C++ object provides the implementation, most of which is private to the C++ layer.</p>\n\t<p>\n\t\tObviously, reflection is required to ", "id": 877465, "language": "en", "link": "https://isocpp.org//blog/2024/07/fat-api-bindings-of-cpp-objects-into-scripting-languages-russell-k.-standis", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://isocpp.org/blog/rss/category/news", "source_obj__id": 314, "status_code": 0, "tags": [], "thumbnail": null, "title": "Fat API Bindings of C++ Objects into Scripting Languages -- Russell K. Standish", "user": null, "vote": 0}]