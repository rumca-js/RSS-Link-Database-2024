[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-25T19:38:28+00:00", "description": "<div id=\"remove_no_follow\">\n<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Rust 1.80, the latest version of the <a href=\"https://www.infoworld.com/article/3218074/what-is-rust-safe-fast-and-easy-software-development.html\">popular memory-safe programming language</a>, has been released, featuring \u201clazy\u201d types to delay initialization of data until their first access.</p>\n\n\n\n<p>Rust 1.80 was <a href=\"https://blog.rust-lang.org/2024/07/25/Rust-1.80.0.html\">unveiled on July 25</a>. Developers with a previous version of Rust installed via <code>rustup</code> can update to version 1.80 by running <code>$ rustup update stable</code>.</p>\n\n\n\n<p>The new lazy types <code>LazyCell</code> and <code>LazyLock</code><strong>,</strong> which delay initialization of values until first acc", "id": 930395, "language": "en-US", "link": "https://www.infoworld.com/article/3477620/rust-1-80-adds-lazy-types.html", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 86, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.infoworld.com/feed/", "source_obj__id": 468, "status_code": 0, "tags": [], "thumbnail": null, "title": "Rust 1.80 adds lazy types", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-25T09:00:00+00:00", "description": "<div id=\"remove_no_follow\">\n<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>One of the problems with building generative AI into your applications is there\u2019s no standard way of managing prompts. Too often, each team that builds AI into their code takes a different approach and manages data in different ways. They\u2019re reinventing the wheel again and again, failing to learn from other teams and other projects.</p>\n\n\n\n<p>Building a new AI interaction model for each application and having different ways of storing, using, and updating prompts wastes time. AI developer resources are limited, and experienced developers are stretched across multiple projects. It\u2019s not effective to have to remember how each application works and how they need to structure and test prompts.</p>\n\n\n\n", "id": 925898, "language": "en-US", "link": "https://www.infoworld.com/article/3477435/build-and-manage-llm-prompts-with-prompty.html", "manual_status_code": 0, "page_rating": 27, "page_rating_contents": 86, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://www.infoworld.com/feed/", "source_obj__id": 468, "status_code": 0, "tags": [], "thumbnail": null, "title": "Build and manage LLM prompts with Prompty", "user": null, "vote": 0}]