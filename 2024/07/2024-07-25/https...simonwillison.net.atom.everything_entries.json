[{"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-25T20:30:01+00:00", "description": "<p><strong><a href=\"https://alexgarcia.xyz/blog/2024/sqlite-lembed-init/index.html\">Introducing sqlite-lembed: A SQLite extension for generating text embeddings locally</a></strong></p>\nAlex Garcia's latest SQLite extension is a C wrapper around the <a href=\"https://github.com/ggerganov/llama.cpp\">llama.cpp</a> that exposes just its embedding support, allowing you to register a GGUF file containing an embedding model:</p>\n<pre><code>INSERT INTO temp.lembed_models(name, model)\n  select 'all-MiniLM-L6-v2',\n  lembed_model_from_file('all-MiniLM-L6-v2.e4ce9877.q8_0.gguf');\n</code></pre>\n<p>And then use it to calculate embeddings as part of a SQL query:</p>\n<pre><code>select lembed(\n  'all-MiniLM-L6-v2',\n  'The United States Postal Service is an independent agency...'\n); -- X'A402...09C3' (1536 bytes)\n</code></pre>\n<p><code>all-MiniLM-L6-v2.e4ce9877.q8_0.gguf</code> here is a 24MB file, so this should run quite happily even on machines without much available RAM.</p>\n<p>What if you don't wa", "id": 931156, "language": "en-us", "link": "https://simonwillison.net/2024/Jul/25/sqlite-lembed-rembed/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Introducing sqlite-lembed: A SQLite extension for generating text embeddings locally", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-25T20:02:25+00:00", "description": "<p><strong><a href=\"https://about.readthedocs.com/blog/2024/07/ai-crawlers-abuse/\">AI crawlers need to be more respectful</a></strong></p>\nEric Holscher:</p>\n<blockquote>\n<p>At Read the Docs, we host documentation for many projects and are generally bot friendly, but the behavior of AI crawlers is currently causing us problems. We have noticed AI crawlers aggressively pulling content, seemingly without basic checks against abuse.</p>\n</blockquote>\n<p>One crawler downloaded 73 TB of zipped HTML files just in Month, racking up $5,000 in bandwidth charges!\n\n    <p><small></small>Via <a href=\"https://news.ycombinator.com/item?id=41072549\">Hacker News</a></small></p>\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/eric-holscher\">eric-holscher</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/ethics\">ethics</a>, <a href=\"https://simonwillison.net/tags/read-the-docs\">read-the-docs</a></p>", "id": 931157, "language": "en-us", "link": "https://simonwillison.net/2024/Jul/25/ai-crawlers-need-to-be-more-respectful/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "AI crawlers need to be more respectful", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-25T19:40:08+00:00", "description": "<p><strong><a href=\"https://anatolyzenkov.com/stolen-buttons/button-stealer\">Button Stealer</a></strong></p>\nReally fun Chrome extension by Anatoly Zenkov: it scans every web page you visit for things that look like buttons and stashes a copy of them, then provides a page where you can see all of the buttons you have collected. Here's <a href=\"https://anatolyzenkov.com/stolen-buttons\">Anatoly's collection</a>, and here are a few that I've picked up trying it out myself:</p>\n<p><img alt=\"Screenshot showing some buttons I have collected, each with their visual appearance maintained\" src=\"https://static.simonwillison.net/static/2024/stolen-buttons.jpg\" /></p>\n<p>The extension source code is <a href=\"https://github.com/anatolyzenkov/button-stealer\">on GitHub</a>. It identifies potential buttons by looping through every <code>&lt;a&gt;</code> and <code>&lt;button&gt;</code> element and <a href=\"https://github.com/anatolyzenkov/button-stealer/blob/cfe43b6247e1b9f7d4414fd2a9b122c2d1a40840/sc", "id": 931158, "language": "en-us", "link": "https://simonwillison.net/2024/Jul/25/button-stealer/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "Button Stealer", "user": null, "vote": 0}, {"age": null, "album": "", "artist": null, "bookmarked": false, "comments": [], "date_published": "2024-07-25T18:58:27+00:00", "description": "<p><strong><a href=\"https://github.com/igrek51/wat\">wat</a></strong></p>\nThis is a really neat Python debugging utility. Install with <code>pip install wat-inspector</code> and then inspect any Python object like this:</p>\n<pre><code>from wat import wat\nwat / myvariable\n</code></pre>\n<p>The <code>wat / x</code> syntax is a shortcut for <code>wat(x)</code> that's quicker to type.</p>\n<p>The tool dumps out all sorts of useful introspection about the variable, value, class or package that you pass to it.</p>\n<p>There are several variants: <code>wat.all / x</code> gives you all of them, or you can chain several together like <code>wat.dunder.code / x</code>.</p>\n<p>The documentation also provides a slightly intimidating copy-paste version of the tool which uses <code>exec()</code>, <code>zlib</code> and <code>base64</code> to help you paste the full implementation directly into any Python interactive session without needing to install it first.\n\n    <p><small></small>Via <a href=\"https://", "id": 931159, "language": "en-us", "link": "https://simonwillison.net/2024/Jul/25/wat/#atom-everything", "manual_status_code": 0, "page_rating": 29, "page_rating_contents": 90, "page_rating_visits": 0, "page_rating_votes": 0, "permanent": false, "source": "https://simonwillison.net/atom/everything", "source_obj__id": 423, "status_code": 0, "tags": [], "thumbnail": null, "title": "wat", "user": null, "vote": 0}]